<?php
/**
 * @file
 * Provide basic command execution.
 *
 * @author Jimmy Berry ("boombatower", http://drupal.org/user/214218)
 */

/**
 * Implements hook_node_info().
 */
function conduit_execute_node_info() {
  return conduit_node_info_job('conduit_execute');
}

/**
 * Implements hook_conduit_validate().
 */
function conduit_execute_conduit_validate(array $properties, array $errors) {
  foreach ($properties as $key => $value) {
    switch ($key) {
      case 'command':
        if (!is_string($value) && !is_array($value)) {
          $errors[] = t('The <em>command</em> property must either be a single command or an array of commands.');
        }
        break;
    }
  }
  return $errors;
}

/**
 * Implements hook_conduit_default_properties().
 */
function conduit_execute_conduit_default_properties() {
  return array(
    'command' => 'echo "hello world"',
  );
}

/**
 * Implements hook_conduit_queue_build().
 */
function conduit_execute_conduit_queue_build(array $properties) {
  // If multiple commands specified then split them up into separate chunks.
  if (is_array($properties['command'])) {
    $items = array();
    foreach ($properties['command'] as $command) {
      $items[] = array(
        'command' => $command,
      );
    }
    return $items;
  }
  return array(array());
}

/**
 * Implements hook_conduit_init().
 */
function conduit_execute_conduit_init($node, $chunk_count) {
  // Add result placeholder.
  for ($delta = 0; $delta < $chunk_count; $delta++) {
    $node->conduit_result_conduit_execute[LANGUAGE_NONE][$delta]['value'] = '[placeholder]';
  }
}

/**
 * Implements hook_conduit_result().
 */
function conduit_execute_conduit_result($node, $delta, $result) {
  if ($result) {
    // Store plugin specific result.
    $node->conduit_result_conduit_execute[LANGUAGE_NONE][$delta]['value'] = $result;
  }

  // Generate summary message.
  $count = $node->conduit_chunk_count[LANGUAGE_NONE][0]['value'];
  $node->conduit_summary[LANGUAGE_NONE][0]['value'] = $node->conduit_pass[LANGUAGE_NONE][0]['value'] ?
    format_plural($count, 'The command was executed successfully.', 'The commands were executed successfully.') :
    format_plural($count, 'The command was not executed successfully.', 'The commands were not executed successfully.');
}
